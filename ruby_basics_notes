# Notes for going through the L.S Ruby Basics exercises

#while
# a while loop returns a nil value. unless break is used, in which case
# the value passed to break is used.

#break
# break returns nil when no arguments are passed to break, 
# or the value of the argument when an argument is provided.

#string interpolation
puts "Welcome to #{'xyz'.upcase} Corporation!"
Notice that with string interpolation you can make the string upcase.
#One of the advantages of using double-quotes 
#is the ability to use string interpolation

#array insert
{signature}  insert(index, obj...) → ary
Inserts given objects before  
or after the element at Integer index offset; returns self.

.insert( 0, "string" )
a.insert(3,5,6,7)

s = 'abc def ghi,jkl mno pqr,stu vwx yz'
puts s.split.inspect
# abc, def, ghi,jkl, mno, pqr,stu, vwx, yz
# ["abc", "def", "ghi,jkl", "mno", "pqr,stu", "vwx", "yz"]
puts s.split(',').inspect
puts s.split(',', 2).inspect

#split array
{signature} split(pattern=nil, [limit]) → anArray

string = "Something"

#quotations
# %Q is an alternative to double-quoted strings. 
# There's also an alternative for single-quoted strings: %q.

# By invoking #split on alphabet and passing an empty string as an argument, 
# we can separate individual characters in alphabet